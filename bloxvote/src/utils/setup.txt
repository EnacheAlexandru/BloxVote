truffle compile
truffle migrate --reset

truffle console

truffle test ./test/VoteTest.js
truffle exec ./test/TimeTest.js

accounts = await web3.eth.getAccounts()
vote = await Vote.deployed()
await vote.addElection("Vote for your mayor", "The next 4 years will be important for our city! Your vote is very important for our future!", 1649970000, 1650103200, [["John Manner", "I want to make more parks!"], ["Umbert Gothium", "I want to make a new hospital and a new mall for my lovely citizens!"], ["Cassandra Biggiy", "I want to build an airport!"]])

await vote.addElection("aa", "bb", 1649970000, 1650142800, [["gg", "wp"], ["gl", "hf"]])
await vote.addElection("cc", "dd", 1549970000, 1550142800, [["omg", "wtf"], ["fyi", "omfg"]])
await vote.addElection("ee", "ff", 1649955600, 1658341800, [["alpha", "beta"], ["omega", "epsilon"]], true)
await vote.addElection("gg", "hh", 1649538000, 1653426000, [["tiger", "leopard"], ["lion", "puma"]])

await vote.registerVoter(accounts[9], 4)
await vote.vote(4, 7, {from: accounts[9]})

[
  [
    '1',
    'aa',
    'bb',
    '1679611243683',
    '1689611243683',
    [ '1', '2' ],
    id: '1',
    title: 'aa',
    description: 'bb',
    startDate: '1679611243683',
    endDate: '1689611243683',
    candidatesIDs: [ '1', '2' ]
  ]
]

const mockFetchedElections = [
  new ElectionDTO(
    1,
    "Vote for your mayor",
    Math.floor(new Date(2022, 3, 25).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 3, 27).getTime() / 1000) * 1000
  ),
  new ElectionDTO(
    2,
    "Vote for your president 2022",
    Math.floor(new Date(2022, 3, 5).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 3, 7).getTime() / 1000) * 1000
  ),
  new ElectionDTO(
    3,
    "Vote for the new law",
    Math.floor(new Date(2022, 3, 10).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 3, 17).getTime() / 1000) * 1000
  ),
  new ElectionDTO(
    4,
    "Vote for your president 4018",
    Math.floor(new Date(2022, 1, 8).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 1, 10).getTime() / 1000) * 1000
  ),
  new ElectionDTO(
    5,
    "Vote for your president 5010",
    Math.floor(new Date(2022, 1, 8).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 1, 10).getTime() / 1000) * 1000
  ),
  new ElectionDTO(
    6,
    "Vote for your president 6011",
    Math.floor(new Date(2022, 1, 8).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 1, 10).getTime() / 1000) * 1000
  ),
  new ElectionDTO(
    7,
    "Vote for your president 7012",
    Math.floor(new Date(2022, 1, 8).getTime() / 1000) * 1000,
    Math.floor(new Date(2022, 1, 10).getTime() / 1000) * 1000
  ),
];

const fetchedCandidates = [
  new Candidate(1, "John Manner", "I want to make more parks!", 17),
  new Candidate(
    2,
    "Umbert Gothium",
    "I want to make a new hospital and a new mall for my lovely citizens!",
    24
  ),
  new Candidate(3, "Cassandra Biggiy", "I want to build an airport!", 58),
];